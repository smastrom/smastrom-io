---
import Layout from '@/layouts/Layout.astro'
import ProjectCard from '@/components/ProjectCard.astro'

import { formatNumber, getBaseUrl, useDato } from '@/lib/utils'
import { packages as pkgs } from '@/lib/static'

import type { CmsOpenSource } from '@/lib/types'
import type { StatsResponse } from '@/pages/api/stats'

const { data, error: cmsErr } = await useDato<CmsOpenSource>(/* GraphQL */ `
   {
      openSource {
         seo {
            title
            description
         }
         title
         text(markdown: true)
      }
   }
`)

if (cmsErr) throw new Error(cmsErr)

const query = 'packages=' + pkgs.map((p) => p).join(',')
const res = await fetch(getBaseUrl() + `/api/stats?${query}`, {
   method: 'GET',
   headers: {
      'Content-Type': 'application/json',
   },
})

const { data: packages, error: packagesErr } = (await res.json()) as StatsResponse

if (packagesErr) throw new Error(packagesErr)

const cms = data.openSource

const countProp = (prop: 'stargazers_count' | 'downloads') =>
   formatNumber(packages.reduce((acc, p) => acc + p[prop], 0))

const withAttrs = (html: string) => html.replace(/<a /g, '<a target="_blank" ')
const withStats = (html: string) =>
   html
      .replace('{{ downloads }}', countProp('downloads'))
      .replace('{{ stars }}', countProp('stargazers_count'))
---

<Layout title={cms.seo.title} description={cms.seo.description} isArticleLayout>
   <article class="Article_Wrapper">
      <h1 class="Title">{cms.title}</h1>
      <div class="Prose" set:html={withStats(withAttrs(cms.text))} />

      <ul class="Card_Grid">
         {packages.map((p) => <ProjectCard project={p} />)}
      </ul>
   </article>
</Layout>

<style>
   .Wrapper {
      max-width: var(--article-container);
      margin: var(--header-height) auto 2rem auto;
      padding: 3rem 0;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;

      @media (max-width: 1240px) {
         padding: 2rem 0;
         margin: var(--header-height) auto 1.5rem auto;
      }
   }

   .Cards {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2.5rem;
      z-index: 1;

      @media (max-width: 910px) {
         grid-template-columns: 1fr;
         gap: var(--page-margin);
      }
   }
</style>
