---
import Layout from '@/layouts/Layout.astro'
import GetInTouch from '@/components/GetInTouch.astro'

import { addLinkAttrs, useDato } from '@/lib/utils'

import type { CmsProfessionalWork } from '@/lib/types'

const { data, error } = await useDato<CmsProfessionalWork>(/* GraphQL */ `
   {
      professionalWork {
         seo {
            title
            description
         }
         title
         subtitle(markdown: true)
         services {
            caption
            title
            image {
               url(imgixParams: { w: "1200", fm: webp })
            }
            imageDescription
            description(markdown: true)
         }
         sections {
            title
            text(markdown: true)
         }
      }
   }
`)

if (error) throw new Error(error)

const cms = data.professionalWork
---

<Layout title={cms.seo.title} description={cms.seo.description} isArticleLayout>
   <article class="Article_Wrapper">
      <h1 class="Title">{cms.title}</h1>
      <GetInTouch />

      <div class="Prose Subtitle" set:html={cms.subtitle} />
      {
         cms.services.map((s) => (
            <section class="Section">
               {s.caption && <h4 class="Caption">{s.caption}</h4>}
               <h3 class="Title_2">{s.title}</h3>
               <div class="Prose" set:html={addLinkAttrs(s.description)} />

               {s.image && (
                  <div class="Img_Wrapper">
                     <div class="Img_Scroller">
                        <img src={s.image.url} alt="" loading="lazy" decoding="async" />
                     </div>

                     <p class="Image_Description">{s.imageDescription}</p>
                  </div>
               )}
            </section>
         ))
      }
      {
         cms.sections.map((s) => (
            <section class="Section">
               <h3 class="Title_2">{s.title}</h3>
               <div class="Prose" set:html={s.text} />
            </section>
         ))
      }
   </article>
</Layout>

<style>
   .Section {
      width: 100%;

      & h4 {
         margin-bottom: 0.35em;
      }
   }

   .Img_Wrapper {
      position: relative;
      max-width: max-content;
      margin-top: -1.75rem;
      margin-bottom: 5rem;

      @media (max-width: 610px) {
         margin-bottom: 2rem;
      }
   }

   .Img_Scroller {
      position: relative;
      margin-top: 1.5rem;
      max-width: 100%;
      width: 1100px;
      height: 100%;
      max-height: 620px;
      overflow: auto;
      border-radius: 0.5rem;
      scroll-snap-type: y proximity;
      border: 1px solid var(--divider-light);
      display: flex;
      flex-direction: column;
      z-index: 2;
      overscroll-behavior: auto;

      @media (max-width: 768px) {
         max-height: 440px;
      }

      @media (max-width: 475px) {
         max-height: 320px;
      }

      & img {
         width: 100%;
         object-fit: contain;
         border-radius: 0.5rem;
         pointer-events: none;
      }
   }

   .Image_Description {
      --padding: 1rem;

      font-size: 0.925rem;
      background-color: var(--bg);
      padding: 0.5rem 0.75rem;
      border-radius: 0.25rem;
      border: 1px solid var(--divider-light);
      position: absolute;
      bottom: var(--padding);
      right: var(--padding);
      z-index: 2;
      max-width: 65ch;

      @media (max-width: 610px) {
         --padding: 0.5rem;
         max-width: calc(100% - 2 * var(--padding));
         margin-top: 0.5rem;
      }

      @media (max-width: 475px) {
         border-radius: 0.5rem;
         position: relative;
         bottom: unset;
         right: unset;
         max-width: 100%;
         background-color: var(--bg-alpha);
      }
   }
</style>
