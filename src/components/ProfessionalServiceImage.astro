---
const { imageUrl, imageDescription } = Astro.props as { imageUrl: string; imageDescription: string }
---

<div class="Img_Wrapper">
   <div class="Img_Scroller">
      <img src={imageUrl} alt="" loading="lazy" decoding="async" />
   </div>

   <p class="Image_Description">{imageDescription}</p>
</div>

<style>
   .Img_Wrapper {
      position: relative;
      max-width: max-content;
      margin-top: calc(-1 * var(--s-3));
      margin-bottom: var(--s-10);

      @media (--tablet-to) {
         margin-bottom: var(--s-4);
      }
   }

   .Img_Scroller {
      position: relative;
      margin-top: var(--s-3);
      max-width: 100%;
      width: 1100px;
      height: 100%;
      max-height: 620px;
      overflow: auto;
      border-radius: var(--r-3);
      scroll-snap-type: y proximity;
      border: var(--b-1) solid var(--divider-light);
      display: flex;
      flex-direction: column;
      z-index: var(--z-1);
      overscroll-behavior: auto;

      @media (--tablet-to) {
         max-height: 440px;
      }

      @media (--mobile-to) {
         max-height: 320px;
      }

      & img {
         width: 100%;
         object-fit: contain;
         border-radius: var(--r-3);
         pointer-events: none;
      }
   }

   .Image_Description {
      --padding: var(--s-1);

      font-size: var(--f-09);
      background-color: var(--bg);
      padding: var(--s-05) var(--s-07);
      border-radius: var(--r-2);
      border: var(--b-1) solid var(--divider-light);
      position: absolute;
      bottom: var(--padding);
      right: var(--padding);
      z-index: var(--z-1);
      max-width: var(--paragraph-max);

      @media (--tablet-to) {
         --padding: var(--s-05);
         max-width: calc(100% - 2 * var(--padding));
         margin-top: var(--s-05);
      }

      @media (--mobile-to) {
         border-radius: var(--r-3);
         position: relative;
         bottom: unset;
         right: unset;
         max-width: 100%;
         background-color: var(--bg-alpha);
      }
   }
</style>
