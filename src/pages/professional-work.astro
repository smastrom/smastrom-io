---
import Layout from '@/layouts/Layout.astro'

import ProfessionalServiceImage from '@/components/ProfessionalServiceImage.astro'
import GetInTouch from '@/components/GetInTouch.astro'

import { useDato } from '@/lib/dato-cms'
import { addLinkAttrs } from '@/lib/utils'

import type { ProfessionalWorkPage } from '@/lib/types'

const { data, error } = await useDato<ProfessionalWorkPage>(/* GraphQL */ `
   {
      professionalWork {
         seo {
            title
            description
         }
         title
         subtitle(markdown: true)
         services {
            caption
            title
            image {
               url(imgixParams: { w: "1200", fm: webp })
            }
            imageDescription
            description(markdown: true)
         }
         sections {
            title
            text(markdown: true)
         }
      }
   }
`)

if (error) throw new Error(error)

const cms = data.professionalWork
---

<Layout title={cms.seo.title} description={cms.seo.description}>
   <article class="G_Article_Wrapper G_Page_Top_Spacing">
      <section class="Section">
         <h1 class="G_Title" style={{ marginBottom: 0 }}>{cms.title}</h1>
         <GetInTouch />
         <div class="G_Paragraphs" set:html={cms.subtitle} />
      </section>

      {
         cms.services.map((s) => (
            <section class="Section">
               {s.caption && <h3 class="G_Caption">{s.caption}</h3>}

               <h2 class="G_Title_2">{s.title}</h2>
               <div class="G_Paragraphs" set:html={addLinkAttrs(s.description)} />

               {s.image && (
                  <ProfessionalServiceImage
                     imageUrl={s.image.url}
                     imageDescription={s.imageDescription}
                  />
               )}
            </section>
         ))
      }

      {
         cms.sections.map((s) => (
            <section class="Section">
               <h3 class="G_Title_2">{s.title}</h3>
               <div class="G_Paragraphs" set:html={s.text} />
            </section>
         ))
      }
   </article>
</Layout>

<style>
   .Section {
      width: 100%;
      display: flex;
      flex-direction: column;

      &:not(:last-of-type) {
         margin-bottom: var(--section-gap);
      }
   }
</style>
